{"version":3,"sources":["components/View.js","App.js","reportWebVitals.js","index.js"],"names":["View","feedbacks","map","feedback","text","name","email","phone","radiobutton","App","useState","data","localStorage","getItem","JSON","parse","getDatafromLS","setFeedbacks","setName","setText","setEmail","setPhone","setradiobutton","console","log","useEffect","setItem","stringify","className","data-toggle","href","id","autoComplete","onSubmit","e","preventDefault","alert","type","required","value","onChange","target","htmlFor","length","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8baa2f32.chunk.js","sourcesContent":["import React from 'react'\nexport const View = ({feedbacks}) => {\n    \n    return feedbacks.map(feedback=>(\n        \n        <tr key={feedback.name}>\n            <td>{feedback.text}</td>\n            <td>{feedback.name}</td>\n            <td>{feedback.email}</td>\n            <td>{feedback.phone}</td>\n          \n            <td>{feedback.radiobutton}</td>\n                      \n        </tr>            \n    \n))\n}\n","import React, { useState, useEffect } from \"react\";\nimport { View } from \"./components/View\";\n\nconst getDatafromLS = () => {\n  const data = localStorage.getItem(\"feedbacks\");\n  if (data) {\n    return JSON.parse(data);\n  } else {\n    return [];\n  }\n};\n// let feedback = {\n//   name: \"\",\n//   email: \"\",\n//   text: \"\",\n//   phone: \"\",\n//   radiobutton: \"\",\n// };\nexport const App = () => {\n  const [feedbacks, setFeedbacks] = useState(getDatafromLS());\n  const [name, setName] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [radiobutton, setradiobutton] = useState(\"\");\n\n  // testing chal rhi ha yaha pr\n  // const [test, setTest] = useState({\n  //   feedback,\n  // });\n\n  // const handleInputChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setTest({\n  //     ...test,\n  //     [name]: value,\n  //   });\n  // };\n\n  // testing chal rhi ha yaha pr\n\n  const feedbackformhandler = (e) => {\n    e.preventDefault();\n    let feedback = {\n      name,\n      email,\n      text,\n      phone,\n      radiobutton,\n    };\n\n    setFeedbacks([...feedbacks, feedback]);\n    setName(\"\");\n    setText(\"\");\n    setEmail(\"\");\n    setPhone(\"\");\n    setradiobutton(\"\");\n\n    alert(\"â€œThank you for completing the information\");\n  };\n  console.log(feedbacks);\n\n  useEffect(() => {\n    localStorage.setItem(\"feedbacks\", JSON.stringify(feedbacks));\n  }, [feedbacks]);\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <h1>Aromatic Bar</h1>\n        <p>\n          <strong>Description:</strong> We are committed to providing you with\n          the best dining experience possible, so we welcome your comments.\n          Please fill out this questionnaire. Thank you.\n        </p>\n        <hr />\n\n        <ul className=\"nav nav-tabs\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#home\">\n              From\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" data-toggle=\"tab\" href=\"#tutorials\">\n              Table\n            </a>\n          </li>\n        </ul>\n\n        <div className=\"tab-content\">\n          <div className=\"tab-pane fade show active\" id=\"home\">\n            <div className=\"form-container\">\n              <form\n                autoComplete=\"off\"\n                className=\"form-group\"\n                onSubmit={feedbackformhandler}\n              >\n                <div className=\"row\">\n                  <div className=\"col-md-6 col-xs-12 \">\n                    <label>Text Field</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      required\n                      value={text}\n                      onChange={(e) => setText(e.target.value)}\n                    \n                    ></input>\n                  </div>\n                  <div className=\"col-md-6 col-xs-12 \">\n                    <label>Customer Name</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      required\n                      onChange={(e) => setName(e.target.value)}\n                      value={name}\n                    ></input>\n                  </div>\n                  <div className=\"col-md-6 col-xs-12 \">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control  \"\n                      required\n                      onChange={(e) => setEmail(e.target.value)}\n                      value={email}\n                    ></input>\n                  </div>\n\n                  <div className=\"col-md-6 col-xs-12\">\n                    {\" \"}\n                    <label>Phone</label>\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      required\n                      onChange={(e) => setPhone(e.target.value)}\n                      value={phone}\n                    ></input>\n                  </div>\n                  <div className=\"col-md-6 col-xs-12\">\n                    <label htmlFor=\"radiobutton\" className=\"form-label\">\n                      User Experience ?\n                    </label>\n                    <br />\n                    <div className=\"form-check form-check-inline\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        id=\"excellent\"\n                        name=\"clean\"\n                        onChange={(e) => setradiobutton(e.target.value)}\n                        value=\"Excellent\"\n                      />\n                      <label className=\"form-check-label\" htmlFor=\"excellent\">\n                        Excellent\n                      </label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"clean\"\n                        onChange={(e) => setradiobutton(e.target.value)}\n                        value=\"Good\"\n                      />\n                      <label className=\"form-check-label\" htmlFor=\"goods\">\n                        Good\n                      </label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"clean\"\n                        onChange={(e) => setradiobutton(e.target.value)}\n                        value=\"Fair\"\n                      />\n                      <label className=\"form-check-label\" htmlFor=\"fair\">\n                        Fair\n                      </label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"clean\"\n                        onChange={(e) => setradiobutton(e.target.value)}\n                        value=\"bed\"\n                      />\n                      <label className=\"form-check-label\" htmlFor=\"bed\">\n                        Bed\n                      </label>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-12  mt-4 mb-4 \">\n                    <div className=\"text-right\">\n                      <button type=\"submit\" className=\"btn btn-success  btn-md\">\n                        Give Feedback\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div className=\"tab-pane fade\" id=\"tutorials\">\n            <div className=\"view-container\">\n              {feedbacks.length > 0 && (\n                <>\n                  <div className=\"table-responsive\">\n                    <table className=\"table\">\n                      <thead>\n                        <tr>\n                          <th>Text Field</th>\n                          <th>Customer Name</th>\n                          <th>Email</th>\n                          <th>Phone</th>\n                          <th>User Experience</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <View feedbacks={feedbacks} />\n                      </tbody>\n                    </table>\n                  </div>\n                  <button\n                    className=\"btn btn-danger btn-md\"\n                    onClick={() => setFeedbacks([])}\n                  >\n                    Remove All\n                  </button>\n                </>\n              )}\n              {feedbacks.length < 1 && <div>No feedbacks are added yet</div>}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}